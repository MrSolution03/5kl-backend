{
  "auth": {
    "registerSuccess": "User registered successfully. Please verify your email.",
    "loginSuccess": "Logged in successfully.",
    "googleAuthFailed": "Google authentication failed.",
    "facebookAuthFailed": "Facebook authentication failed.",
    "googleAuthSuccess": "Google authentication successful.",
    "facebookAuthSuccess": "Facebook authentication successful.",
    "userExistsEmail": "User with that email already exists.",
    "userExistsUsername": "This username is already taken.",
    "invalidCredentials": "Invalid credentials.",
    "emailVerifiedRequired": "Please verify your email address to continue.",
    "passwordRequired": "Password is required.",
    "forgotPasswordEmailSent": "An email for password reset has been sent to your email address.",
    "forgotPasswordEmailSubject": "5KL Password Reset",
    "forgotPasswordEmailContent": "You are receiving this because you (or someone else) have requested the reset of the password for your account.\n\nPlease click on the following link, or paste this into your browser to complete the process:\n\n{0}\n\nIf you did not request this, please ignore this email and your password will remain unchanged.",
    "emailSendFailed": "The reset email could not be sent. Please try again later.",
    "invalidResetToken": "Invalid or expired password reset token.",
    "passwordResetSuccess": "Your password has been reset successfully.",
    "passwordMismatch": "The new passwords do not match.",
    "currentPasswordInvalid": "The current password is incorrect.",
    "passwordChanged": "Your password has been changed successfully. Please log in again.",
    "userBanned": "Your account has been banned. Reason: {0}",
    "defaultBanReason": "Not specified."
  },
  "user": {
    "notFound": "User not found.",
    "profileUpdated": "User profile updated successfully.",
    "accountDeleted": "User account deleted successfully.",
    "addressAdded": "Address added successfully.",
    "addressUpdated": "Address updated successfully.",
    "addressRemoved": "Address removed successfully.",
    "addressNotFound": "Address not found.",
    "usernameTaken": "This username is already taken.",
    "invalidRoles": "Invalid roles provided. Roles must be an array of \"buyer\", \"seller\", or \"admin\".",
    "address": {
      "streetRequired": "Street is required.",
      "cityRequired": "City is required.",
      "stateRequired": "State/Province is required.",
      "zipCodeRequired": "Zip Code is required.",
      "countryRequired": "Country is required."
    },
    "dashboardRetrieved": "User dashboard retrieved successfully.",
    "orderHistoryCleared": "Order history archived successfully.",
    "offerHistoryCleared": "Offer history archived successfully.",
    "noHistoryToDelete": "No history to archive at this time.",
    "recommendationsRetrieved": "Product recommendations retrieved successfully.",
    "passwordUpdateForbidden": "You cannot change the password for accounts connected via OAuth.",
    "messagesRetrieved": "Messages retrieved successfully."
  },
  "errors": {
    "notFound": "Can't find {0} on this server!",
    "notAuthorized": "Not authorized.",
    "forbidden": "Access forbidden.",
    "invalidToken": "Invalid token. Please log in again!",
    "tokenExpired": "Token expired. Please log in again!",
    "missingToken": "Not authorized, no token provided.",
    "resourceNotFound": "Resource not found with id of {0}.",
    "duplicateField": "Duplicate field value: '{0}' for '{1}'. Please use another value.",
    "validationError": "Invalid input data. {0}",
    "internalServerError": "Internal Server Error.",
    "fileUploadFailed": "File upload failed. Reason: {0}",
    "invalidFileType": "Only image files are allowed!",
    "noFileUploaded": "No file uploaded.",
    "imageNotFound": "Image not found or does not belong to this product.",
    "fileSizeLimit": "file size is limited to {0}."
  },
  "common": {
    "success": "Success.",
    "error": "Error.",
    "fail": "Fail.",
    "currency": {
      "FC": "FC",
      "USD": "USD"
    }
  },
  "shop": {
    "nameRequired": "Shop name is required.",
    "nameMinLength": "Shop name must be at least 3 characters long.",
    "nameUnique": "This shop name is already taken.",
    "ownerRequired": "Shop must have an owner.",
    "descriptionMaxLength": "Shop description cannot exceed 500 characters.",
    "phoneInvalid": "Please enter a valid phone number.",
    "emailInvalid": "Please enter a valid email address.",
    "alreadyOwnsShop": "You already own a shop.",
    "created": "Shop created successfully.",
    "forbidden": "You are not authorized to perform this action on this shop.",
    "approvalForbidden": "A seller cannot change their shop's approval status.",
    "updated": "Shop updated successfully.",
    "deleted": "Shop deleted successfully.",
    "deleteForbiddenProductsExist": "Cannot delete shop because it contains products.",
    "logoUploaded": "Shop logo uploaded successfully."
  },
  "product": {
    "notFound": "Product not found.",
    "forbidden": "You are not authorized to modify/delete this product.",
    "created": "Product created successfully.",
    "updated": "Product updated successfully.",
    "deleted": "Product deleted successfully.",
    "imagesUploaded": "{0} images uploaded successfully.",
    "imageRemoved": "Image removed successfully.",
    "shopNotFound": "Shop not found or not approved.",
    "categoryNotFound": "Category not found.",
    "brandNotFound": "Brand not found.",
    "invalidCategory": "Invalid category or sub-category provided.",
    "invalidBrand": "Invalid brand provided.",
    "notEnoughStock": "Not enough stock for product '{0}'. Available: {1}, requested: {2}.",
    "productAlreadyExists": "A product with this SKU already exists.",
    "validation": {
      "nameRequired": "Product name is required.",
      "nameMinLength": "Product name must be at least {0} characters long.",
      "nameMaxLength": "Product name cannot exceed {0} characters.",
      "descriptionRequired": "Product description is required.",
      "descriptionMinLength": "Product description must be at least {0} characters long.",
      "descriptionMaxLength": "Product description cannot exceed {0} characters.",
      "priceNumber": "Price must be a number.",
      "priceMin": "Price must be at least 0.01.",
      "priceRequired": "Product price is required.",
      "categoryInvalid": "Invalid category provided.",
      "categoryRequired": "Product category is required.",
      "stockNumber": "Stock must be a number.",
      "stockInteger": "Stock must be an integer.",
      "stockMin": "Stock must be at least 0.",
      "stockRequired": "Product stock is required."
    }
  },
  "category": {
    "notFound": "Category not found.",
    "created": "Category created successfully.",
    "updated": "Category updated successfully.",
    "deleted": "Category deleted successfully.",
    "alreadyExists": "A category with this name or slug already exists.",
    "validation": {
      "nameRequired": "Category name is required.",
      "nameMinLength": "Category name must be at least {0} characters long.",
      "nameMaxLength": "Category name cannot exceed {0} characters."
    }
  },
  "brand": {
    "notFound": "Brand not found.",
    "created": "Brand created successfully.",
    "updated": "Brand updated successfully.",
    "deleted": "Brand deleted successfully.",
    "alreadyExists": "A brand with this name already exists.",
    "validation": {
      "nameRequired": "Brand name is required.",
      "nameMinLength": "Brand name must be at least {0} characters long.",
      "nameMaxLength": "Brand name cannot exceed {0} characters."
    }
  },
  "joi": {
    "string.empty": "The {#label} field cannot be empty.",
    "string.min": "The {#label} field must contain at least {#limit} characters.",
    "string.max": "The {#label} field must not exceed {#limit} characters.",
    "string.email": "The {#label} field must be a valid email.",
    "string.alphanum": "The {#label} field must only contain alphanumeric characters.",
    "string.hex": "The {#label} field must be a valid hexadecimal string.",
    "string.length": "The {#label} field must have {#limit} characters.",
    "string.uri": "The {#label} field must be a valid URL.",
    "number.base": "The {#label} field must be a number.",
    "number.min": "The {#label} field must be greater than or equal to {#limit}.",
    "number.integer": "The {#label} field must be an integer.",
    "any.required": "The {#label} field is required.",
    "array.base": "The {#label} field must be an array.",
    "object.base": "The {#label} field must be an object.",
    "object.unknown": "The {#label} field is not allowed.",
    "any.only": "The {#label} field must be equal to {#valids}.",
    "string.pattern.base": "The {#label} field is invalid."
  },
  "admin": {
    "userNotFound": "User not found.",
    "userRolesUpdated": "User roles updated successfully.",
    "userDeleted": "User deleted successfully by administrator.",
    "shopNotFound": "Shop not found.",
    "shopAlreadyApproved": "This shop is already approved.",
    "shopApproved": "Shop approved successfully.",
    "shopDeactivated": "Shop deactivated successfully.",
    "shopActivated": "Shop activated successfully.",
    "orderNotFound": "Order not found.",
    "orderAccepted": "Order accepted successfully.",
    "orderRejected": "Order rejected successfully.",
    "orderStatusUpdated": "Order status updated successfully.",
    "offerNotFound": "Offer not found.",
    "offerAccepted": "Offer accepted successfully.",
    "offerRejected": "Offer rejected successfully.",
    "offerMessageAdded": "Message added to offer successfully.",
    "offerAlreadyAcceptedOrRejected": "This offer is already accepted, rejected, or cancelled.",
    "categoryNotFound": "Category not found.",
    "categoryUpdated": "Category updated successfully.",
    "categoryDeleted": "Category deleted successfully.",
    "brandNotFound": "Brand not found.",
    "brandUpdated": "Brand updated successfully.",
    "brandDeleted": "Brand deleted successfully.",
    "reasonRequiredForRejection": "Reason is required to reject the {0}.",
    "acceptedPriceRequiredForAcceptance": "Accepted price is required to accept the offer.",
    "invalidOfferPrice": "Accepted price cannot be lower than the initial product price.",
    "cannotDeleteAdmin": "Cannot delete an administrator.",
    "invalidOrderStatus": "Unauthorized order status transition: {0}.",
    "categoryDeleteForbidden": "Cannot delete this category because it is linked to products or sub-categories.",
    "brandDeleteForbidden": "Cannot delete this brand because it is linked to products.",
    "cannotMessageNonPendingOffer": "You cannot add a message to a non-pending offer.",
    "currencyRateNotFound": "Currency exchange rate not found.",
    "currencyRateUpdated": "Currency exchange rate updated successfully.",
    "invalidCurrencyRate": "The exchange rate must be a positive number.",
    "cannotMarkAsPaidNotDelivered": "Cannot mark as paid an order with status '{0}'. It must be delivered.",
    "orderAlreadyPaid": "This order is already marked as paid.",
    "orderMarkedAsPaid": "Order marked as paid successfully.",
    "orderMarkedAsUnpaid": "Order marked as unpaid successfully.",
    "userBanned": "User banned successfully.",
    "userUnbanned": "User unbanned successfully.",
    "banReasonRequired": "Ban reason is required.",
    "cannotBanSelf": "You cannot ban yourself.",
    "userAlreadyBanned": "This user is already banned.",
    "userNotBanned": "This user is not banned.",
    "messageSentSuccess": "Message sent successfully.",
    "invalidRecipientType": "Invalid recipient type. Must be 'all', 'buyer', 'seller' or 'user'.",
    "specificUserRequired": "A specific user ID is required for recipient type 'user'."
  },
  "cart": {
    "notFound": "Cart not found.",
    "itemNotFound": "Item not found in cart.",
    "productNotFound": "Product not found.",
    "notEnoughStock": "Not enough stock for product '{0}'. Available: {1}, requested: {2}.",
    "addedToCart": "Product added to cart successfully.",
    "quantityUpdated": "Item quantity updated in cart.",
    "removedFromCart": "Item removed from cart.",
    "cleared": "Cart cleared successfully.",
    "alreadyInCart": "This product is already in your cart. Quantity has been updated."
  },
  "offer": {
    "notFound": "Offer not found.",
    "productNotFound": "Product not found for this offer.",
    "created": "Price offer created successfully.",
    "alreadyAcceptedOrRejected": "This offer is already accepted, rejected, or cancelled.",
    "notPending": "This offer is not awaiting a response.",
    "messageAdded": "Message added to offer discussion.",
    "retracted": "Offer retracted successfully.",
    "addedToCart": "Product with negotiated price added to cart.",
    "buyerNotOwner": "You are not the owner of this offer.",
    "priceNotValid": "The proposed price must be a positive number.",
    "offerAlreadyMade": "An offer for this product is already pending or has been accepted.",
    "productOutOfStock": "The product is out of stock.",
    "acceptLinkExpired": "The link to accept the offer is invalid or has expired."
  },
  "order": {
    "notFound": "Order not found.",
    "cartEmpty": "Your cart is empty.",
    "noAddress": "Please provide a valid shipping address.",
    "productOutOfStock": "Product '{0}' is not available in sufficient quantity. Available stock: {1}, requested: {2}.",
    "created": "Your order has been created successfully and is awaiting administrator approval.",
    "cancelled": "Order cancelled successfully.",
    "cannotCancel": "Cannot cancel an order with status '{0}'.",
    "invalidAddressId": "Invalid address ID or address not found.",
    "archiveForbidden": "Cannot archive an order with status '{0}'.",
    "invalidCurrency": "Invalid currency provided. Currency must be 'FC' or 'USD'."
  },
  "seller": {
    "dashboardStats": "Seller dashboard statistics.",
    "shopNotFound": "Your shop was not found.",
    "shopCreated": "Your shop has been created successfully.",
    "shopUpdated": "Your shop has been updated successfully.",
    "logoUploaded": "Shop logo uploaded successfully.",
    "productNotFound": "Product not found or does not belong to your shop.",
    "productsRetrieved": "Your shop's products retrieved successfully.",
    "ordersRetrieved": "Your shop's orders retrieved successfully.",
    "offersRetrieved": "Offers for your products retrieved successfully.",
    "accessDeniedShop": "Access denied. This action is reserved for the shop owner or administrator.",
    "notASeller": "You are not registered as a seller."
  }
}